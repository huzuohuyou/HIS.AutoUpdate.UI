@inject HttpClient Http
@using System.Text.Json;
@using HIS.AutoUpdate.Blazor.Models;
@using System;
@using System.Collections.Generic;
@using System.IO;
@using System.Runtime.Serialization.Formatters;
@inject MessageService _message
@using System.ComponentModel.DataAnnotations;
@using Microsoft.Extensions.Options;
@inject IJSRuntime JSRuntime;
@inject IOptionsSnapshot<MyProSettings> MyProSettings;
@inject NotificationService _notice
<Form Model="@model"
      LabelColSpan="8"
      WrapperColSpan="16">
    <FormItem Label="站点">
        <Input Disabled Placeholder="configFileName" @bind-Value="@Service.Name" />
    </FormItem>
    @foreach (var item in Service.Columns)
    {
        @if (Service.Columns.IndexOf(item) == 0)
        {
            <FormItem Label="@item.IP">
                <Upload Action=@item.ServerUploadUri
                        Name="files"
                        accept=".zip"
                        @bind-FileList="fileList"
                        ShowButton="fileList?.Count < 1"
                        ListType="picture-card"
                        Data="dict"
                        OnChange="HandleChange">
                    <div>
                        <Icon Type="plus"></Icon>
                        <div className="ant-upload-text">Upload</div>
                    </div>
                </Upload>
            </FormItem>
        }
        else if (Service.Columns.IndexOf(item) == 1)
        {
            <FormItem Label="@item.IP">
                <Upload Action=@item.ServerUploadUri
                        Name="files"
                        Accept=".zip"
                        @bind-FileList="fileList2"
                        ShowButton="fileList2?.Count < 1"
                        Data="dict"
                        ListType="picture-card"
                        OnChange="HandleChange2">
                    <div>
                        <Icon Type="plus"></Icon>
                        <div className="ant-upload-text">Upload</div>
                    </div>
                </Upload>

            </FormItem>
        }
        else if (Service.Columns.IndexOf(item) == 2)
        {
            <FormItem Label="@item.IP">
                <Upload Action=@item.ServerUploadUri
                        Name="files"
                        Accept=".zip"
                        @bind-FileList="fileList3"
                        ShowButton="fileList3?.Count < 1"
                        Data="dict"
                        ListType="picture-card"
                        OnChange="HandleChange3">
                    <div>
                        <Icon Type="plus"></Icon>
                        <div className="ant-upload-text">Upload</div>
                    </div>
                </Upload>
            </FormItem>
        }


    }

</Form>


@code
{
    //[Parameter]
    //public Site Site { get; set; }
    [Parameter]
    public Service Service { get; set; }
    private Model model = new Model();

    Dictionary<string, object> dict = new Dictionary<string, object>() { { "siteName", ""} };

    protected override void OnInitialized()
    {
        dict["siteName"] = Service.Name;
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        Console.WriteLine($"OnAfterRender, firstRender:{firstRender}");
        dict["siteName"] = Service.Name;
        base.OnAfterRender(firstRender);
    }

    public class Model
    {

        [Required]
        public string CurrentVersionURL { get; set; }

    }

    List<UploadFileItem> fileList = new List<UploadFileItem> { };
    List<UploadFileItem> fileList2 = new List<UploadFileItem> { };
    List<UploadFileItem> fileList3 = new List<UploadFileItem> { };

    async Task HandleChange(UploadInfo fileinfo)
    {
        try
        {
            if (fileinfo.File.State == UploadState.Success)
            {
                await NoticeWithIcon(NotificationType.Success, "文件上传", $@"上传成功！！！", 3);
                fileinfo.File.Url = fileinfo.File.ObjectURL;
            }
            else if (fileinfo.File.State == UploadState.Fail)
            {
                await NoticeWithIcon(NotificationType.Warning, "文件上传", $@"上传失败{fileinfo.File.FileName}");
            }
        }
        catch (Exception ex)
        {
            await NoticeWithIcon(NotificationType.Error, "文件上传", $@"异常：{ex.Message}", 3);
        }

    }

    async Task HandleChange2(UploadInfo fileinfo)
    {
        try
        {
            if (fileinfo.File.State == UploadState.Success)
            {
                await NoticeWithIcon(NotificationType.Success, "文件上传", $@"上传成功！！！", 3);
                fileinfo.File.Url = fileinfo.File.ObjectURL;
            }
            else if (fileinfo.File.State == UploadState.Fail)
            {
                await NoticeWithIcon(NotificationType.Warning, "文件上传", $@"上传失败{fileinfo.File.FileName}");
            }
        }
        catch (Exception ex)
        {
            await NoticeWithIcon(NotificationType.Error, "文件上传", $@"异常：{ex.Message}");
        }

    }

    private async Task NoticeWithIcon(NotificationType type, string WebApiUri, string Description, double Duration = 0)
    {
        await _notice.Open(new NotificationConfig()
        {
            Message = WebApiUri,
            Duration = Duration,
            Description = Description,
            NotificationType = type
        });
    }

    async Task HandleChange3(UploadInfo fileinfo)
    {
        try
        {
            if (fileinfo.File.State == UploadState.Success)
            {
                await NoticeWithIcon(NotificationType.Success, "文件上传", $@"上传成功！！！", 3);
                fileinfo.File.Url = fileinfo.File.ObjectURL;
            }
            else if (fileinfo.File.State == UploadState.Fail)
            {
                await NoticeWithIcon(NotificationType.Warning, "文件上传", $@"上传失败{fileinfo.File.FileName}");
            }
        }
        catch (Exception ex)
        {
            await NoticeWithIcon(NotificationType.Error, "文件上传", $@"异常：{ex.Message}", 3);
        }
    }
}

<style>
    /* you can make up upload button and sample style by using stylesheets */
    .ant-upload-select-picture-card i {
        color: #999;
        font-size: 32px;
    }

    .ant-upload-select-picture-card .ant-upload-text {
        margin-top: 8px;
        color: #666;
    }
</style>